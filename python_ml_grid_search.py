# -*- coding: utf-8 -*-
"""
Created on Tue Nov 14 10:26:14 2023

@author: Marko
"""
# Щоб почати, ми повинні спочатку завантажити набір даних, з яким будемо працювати.
from sklearn import datasets
iris = datasets.load_iris()

# Далі, щоб створити модель, ми повинні мати набір незалежних змінних X і залежну змінну y.
X = iris['data']
y = iris['target']

# Тепер ми завантажимо логістичну модель для класифікації квітів ірисів.
from sklearn.linear_model import LogisticRegression

# Створення моделі, встановлення більшого значення max_iter, щоб гарантувати, що модель знайде результат.
logit = LogisticRegression(max_iter = 10000)

# Після того, як ми створили модель, ми повинні адаптувати її до даних.
print(logit.fit(X,y))

# Щоб оцінити модель, ми запускаємо метод балів.
print(logit.score(X,y))

# Реалізація Grid Search
# Ми виконаємо ті самі дії, що й раніше, за винятком того, що цього разу ми встановимо діапазон значень для C.
# Щоб знати, які значення встановити для шуканих параметрів, знадобиться поєднання знань предметної області та практики.
# Оскільки значення за замовчуванням для C, 1ми встановимо діапазон значень навколо нього.
C = [0.25, 0.5, 0.75, 1, 1.25, 1.5, 1.75, 2]

# Далі ми створимо цикл for, щоб змінювати значення Cта оцінювати модель із кожною зміною.
# Спочатку ми створимо порожній список для зберігання балів.
scores = []

# Щоб змінити значення, Cми повинні проходити цикл по діапазону значень і щоразу оновлювати параметр.

for choice in C:
  logit.set_params(C=choice)
  logit.fit(X, y)
  scores.append(logit.score(X, y))
  
# За допомогою балів, збережених у списку, ми можемо оцінити, що є найкращим вибором C.
print(scores)


