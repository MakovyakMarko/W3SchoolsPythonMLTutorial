# -*- coding: utf-8 -*-
"""
Created on Tue Oct 31 11:22:34 2023

@author: Marko
"""

import numpy

#X represents the size of a tumor in centimeters.
X = numpy.array([3.78, 2.44, 2.09, 0.14, 1.72, 1.65, 4.92, 4.37, 4.96, 4.52, 3.69, 5.88]).reshape(-1,1)
#Note: X has to be reshaped into a column from a row for the LogisticRegression() function to work.

#y represents whether or not the tumor is cancerous (0 for "No", 1 for "Yes").
y = numpy.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])

# Ми будемо використовувати метод із модуля sklearn, тому нам також доведеться імпортувати цей модуль:
from sklearn import linear_model

# З модуля sklearn ми використаємо метод LogisticRegression() для створення об’єкта логістичної регресії.
# Цей об’єкт має метод під назвою fit(), який приймає незалежні та залежні значення як параметри та заповнює об’єкт регресії даними, які описують зв’язок:
logr = linear_model.LogisticRegression()
logr.fit(X,y)

#predict if tumor is cancerous where the size is 3.46mm:
predicted = logr.predict(numpy.array([3.46]).reshape(-1,1))

print(predicted)
#Ми передбачили, що пухлина розміром 3,46 мм не буде раковою.


# Коефіцієнт
# У логістичній регресії коефіцієнт — це очікувана зміна логарифмічних шансів мати результат на одиницю зміни X.
# Це не найінтуїтивніше розуміння, тому давайте використаємо це, щоб створити щось, що має більший сенс, шанси.

log_odds = logr.coef_
odds = numpy.exp(log_odds)

print(odds)
# Це говорить нам про те, що зі збільшенням розміру пухлини на 1 мм ймовірність того, що вона буде раковою пухлиною, зростає в 4 рази.

# Ймовірність
# Коефіцієнт і значення перетину можна використовувати для визначення ймовірності того, що кожна пухлина є раковою.
# Створіть функцію, яка використовує коефіцієнт моделі та значення перехоплення для повернення нового значення. Це нове значення представляє ймовірність того, що дане спостереження є пухлиною:
    
def logit2prob(logr,x):
  #Щоб знайти логарифмічні шанси для кожного спостереження, ми повинні спочатку створити формулу, схожу на формулу лінійної регресії, витягнувши коефіцієнт і відрізок.
  log_odds = logr.coef_ * x + logr.intercept_
  # Щоб потім перетворити логарифмічні шанси на коефіцієнти, ми повинні піднести логарифмічні коефіцієнти до степеня.
  odds = numpy.exp(log_odds)
  # Тепер, коли у нас є шанси, ми можемо перетворити його на ймовірність, поділивши його на 1 плюс шанси.
  probability = odds / (1 + odds)
  return(probability)

print(logit2prob(logr, X))